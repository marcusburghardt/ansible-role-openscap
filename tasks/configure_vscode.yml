---
- name: "{{ role_name }} | {{ task.name }} | Ensure VSCode repository"
  become: true
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.repo }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey }}"
    enabled: true
    state: "{{ item.state }}"
  loop: "{{ vscode_repo }}"
  register: result_repo_vscode
  when:
    - item.enabled
    - ansible_facts['os_family']|lower == "redhat"

- name: "{{ role_name }} | {{ task.name }} | Ensure VSCode is installed and updated"
  become: true
  ansible.builtin.package:
    name: 'code'
    state: present
  register: result_install_vscode
  when:
    - ansible_facts['system']|lower == "linux"
    - result_repo_vscode is success

- name: "{{ role_name }} | {{ task.name }} | Ensure the workspaces folder for VSCode"
  ansible.builtin.file:
    path: "{{ vscode_workspaces_folder }}"
    state: directory
    mode: '0755'
  register: result_vscode_workspaces_folder
  when: result_install_vscode is success

- name: "{{ role_name }} | {{ task.name }} | Locate the {{ vscode_workspaces_config_file }} file of VSCode"
  ansible.builtin.find:
    paths: "{{ vscode_workspaces_folder }}"
    recurse: true
    patterns: "{{ vscode_workspaces_config_file }}"
  register: result_vscode_workspaces_file
  when: result_vscode_workspaces_folder is success

- name: "{{ role_name }} | {{ task.name }} | First execution of VSCode"
  ansible.builtin.debug:
    msg:
      - "If VSCode was just installed, is necessary to open it for create the initial configurations."
      - "Also, add some folder in your VSCode workspace to create the workspaces configurations file."
      - "VSCode Menu: File -> Add Folder to Workspace..."
  when: result_vscode_workspaces_file.matched == 0

- name: "{{ role_name }} | {{ task.name }} | Ensure the main workspace folder is set in VSCode"
  ansible.builtin.command:
    chdir: "{{ role_path }}/files"
    argv:
      - "{{ ansible_python_interpreter }}"
      - vscode_settings.py
      - "{{ item.action }}"
      - "{{ result_vscode_workspaces_file.files[0].path }}"
      - "folders"
      - "path"
      - "{{ item.path }}"
    warn: true
  loop: "{{ vscode_workspaces }}"
  register: result_workspaces_reference
  changed_when: result_workspaces_reference.rc == "1"
  failed_when: result_workspaces_reference.rc not in [0,1]
  when:
    - item.enabled
    - item.state == "directory"
    - item.path == base_dir
    - result_vscode_workspaces_file.matched == 1

- name: "{{ role_name }} | {{ task.name }} | Ensure the desired extensions are installed in VSCode"
  ansible.builtin.command:
    argv:
      - 'code'
      - '--install-extension'
      - '{{ item.name }}'
    warn: true
  loop: '{{ vscode_extensions }}'
  register: result_vscode_extensions_add
  changed_when: "'was successfully installed' in result_vscode_extensions_add.stdout"
  when:
    - item.enabled
    - item.installed

- name: "{{ role_name }} | {{ task.name }} | Ensure the undesired extensions are uninstalled in VSCode"
  ansible.builtin.command:
    argv:
      - 'code'
      - '--uninstall-extension'
      - "{{ item.name }}"
    warn: true
  loop: "{{ vscode_extensions }}"
  register: result_vscode_extensions_remove
  changed_when: "'was successfully uninstalled' in result_vscode_extensions_remove.stdout"
  when:
    - item.enabled
    - not item.installed
  ignore_errors: true
...
